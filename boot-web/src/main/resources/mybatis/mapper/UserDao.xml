<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.boot.dao.UserDao">
  <resultMap id="BaseResultMap" type="com.qf.boot.pojo.entity.User">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="last_login_ip" jdbcType="VARCHAR" property="lastLoginIp" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="roles" jdbcType="VARCHAR" property="roles" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="photo" jdbcType="VARCHAR" property="photo" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, nick_name, real_name, `password`, phone, email, last_login_ip, last_login_time, 
    roles, note, photo
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=BIGINT}
  </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="com.qf.boot.pojo.entity.User" useGeneratedKeys="true">
    insert into user (nick_name, real_name, `password`, 
      phone, email, last_login_ip, 
      last_login_time, roles, note, 
      photo)
    values (#{nickName,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{lastLoginIp,jdbcType=VARCHAR}, 
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{roles,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, 
      #{photo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="user_id" keyProperty="userId" parameterType="com.qf.boot.pojo.entity.User" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="lastLoginIp != null">
        last_login_ip,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="roles != null">
        roles,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="photo != null">
        photo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginIp != null">
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roles != null">
        #{roles,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        #{photo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.boot.pojo.entity.User">
    update user
    <set>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginIp != null">
        last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roles != null">
        roles = #{roles,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="photo != null">
        photo = #{photo,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.boot.pojo.entity.User">
    update user
    set nick_name = #{nickName,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      last_login_ip = #{lastLoginIp,jdbcType=VARCHAR},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      roles = #{roles,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>

  <select id="ajaxUserList" resultType="com.qf.boot.pojo.vo.UserVo">
    select
    <include refid="Base_Column_List"/>
    from user
    <where>
      <if test="nickName!=null and nickName!=''">
        and nick_name like concat('%',#{nickName},'%')
      </if>
      <if test="phone!=null and phone!=''">
        and phone like concat('%',#{phone},'%')
      </if>
      <if test="userId!=null ">
        and user_id =#{userId}
      </if>
    </where>
    limit #{start},#{limit}
  </select>
  <select id="ajaxUserListCount" resultType="java.lang.Integer">
    select
    count(*)
    from user
    <where>
      <if test="nickName!=null and nickName!=''">
        and nick_name like concat('%',#{nickName},'%')
      </if>
      <if test="phone!=null and phone!=''">
        and phone like concat('%',#{phone},'%')
      </if>
      <if test="userId!=null ">
        and user_id =#{userId}
      </if>
    </where>
  </select>
    <select id="selectByPK" resultType="com.qf.boot.pojo.vo.UserVo">
      select
      <include refid="Base_Column_List" />
      from user
      where user_id = #{userId,jdbcType=BIGINT}
    </select>

    <delete id="deleteByIds">
     delete from user where user_id in
     <foreach collection="ids" separator="," open="(" close=")" item="id">
       #{id}
     </foreach>
  </delete>

  <select id="selectUserByQuery" resultType="com.qf.boot.pojo.vo.UserVo">
    select <include refid="Base_Column_List"/> from user
    <where>
      <if test="userId!=null ">
        and user_id =#{userId}
      </if>
      <if test="principal!=null and principal!=''">
        or phone = #{principal} or email =#{principal}
      </if>
    </where>
     limit 1
  </select>


</mapper>